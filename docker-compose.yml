version: '3.8'

services:
  client-app:
    build: ./frontend
    env_file:
      - .env
    expose:
      - '5000'

  backend-app:
    build: ./backend
    volumes:
      - ./backend:/usr/src/app
    env_file:
      - .env
    expose:
      - ${PORT}
    depends_on:
      db:
        condition: service_healthy

    links:
      - db
    command: sh -c "node ace migration:run && node bin/server.js"

  db:
    image: postgres
    restart: always
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER} -d ${DB_DATABASE}']
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:alpine
    ports:
      - '80:80'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - client-app
      - backend-app

volumes:
  postgres-data:
